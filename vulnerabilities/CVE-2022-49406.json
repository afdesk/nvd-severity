{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix potential deadlock in blk_ia_range_sysfs_show()\n\nWhen being read, a sysfs attribute is already protected against removal\nwith the kobject node active reference counter. As a result, in\nblk_ia_range_sysfs_show(), there is no need to take the queue sysfs\nlock when reading the value of a range attribute. Using the queue sysfs\nlock in this function creates a potential deadlock situation with the\ndisk removal, something that a lockdep signals with a splat when the\ndevice is removed:\n\n[  760.703551]  Possible unsafe locking scenario:\n[  760.703551]\n[  760.703554]        CPU0                    CPU1\n[  760.703556]        ----                    ----\n[  760.703558]   lock(&q->sysfs_lock);\n[  760.703565]                                lock(kn->active#385);\n[  760.703573]                                lock(&q->sysfs_lock);\n[  760.703579]   lock(kn->active#385);\n[  760.703587]\n[  760.703587]  *** DEADLOCK ***\n\nSolve this by removing the mutex_lock()/mutex_unlock() calls from\nblk_ia_range_sysfs_show().",
  "Severity": "MEDIUM",
  "Score": 5.5,
  "Cvss_v31_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
}