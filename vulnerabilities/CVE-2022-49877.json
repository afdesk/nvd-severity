{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix the sk->sk_forward_alloc warning of sk_stream_kill_queues\n\nWhen running `test_sockmap` selftests, the following warning appears:\n\n  WARNING: CPU: 2 PID: 197 at net/core/stream.c:205 sk_stream_kill_queues+0xd3/0xf0\n  Call Trace:\n  <TASK>\n  inet_csk_destroy_sock+0x55/0x110\n  tcp_rcv_state_process+0xd28/0x1380\n  ? tcp_v4_do_rcv+0x77/0x2c0\n  tcp_v4_do_rcv+0x77/0x2c0\n  __release_sock+0x106/0x130\n  __tcp_close+0x1a7/0x4e0\n  tcp_close+0x20/0x70\n  inet_release+0x3c/0x80\n  __sock_release+0x3a/0xb0\n  sock_close+0x14/0x20\n  __fput+0xa3/0x260\n  task_work_run+0x59/0xb0\n  exit_to_user_mode_prepare+0x1b3/0x1c0\n  syscall_exit_to_user_mode+0x19/0x50\n  do_syscall_64+0x48/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThe root case is in commit 84472b436e76 (\"bpf, sockmap: Fix more uncharged\nwhile msg has more_data\"), where I used msg->sg.size to replace the tosend,\ncausing breakage:\n\n  if (msg->apply_bytes && msg->apply_bytes < tosend)\n    tosend = psock->apply_bytes;",
  "Severity": "UNKNOWN",
  "Score": 0.0
}