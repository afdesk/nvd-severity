{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge: adv7511: unregister cec i2c device after cec adapter\n\ncec_unregister_adapter() assumes that the underlying adapter ops are\ncallable. For example, if the CEC adapter currently has a valid physical\naddress, then the unregistration procedure will invalidate the physical\naddress by setting it to f.f.f.f. Whence the following kernel oops\nobserved after removing the adv7511 module:\n\n    Unable to handle kernel execution of user memory at virtual address 0000000000000000\n    Internal error: Oops: 86000004 [#1] PREEMPT_RT SMP\n    Call trace:\n     0x0\n     adv7511_cec_adap_log_addr+0x1ac/0x1c8 [adv7511]\n     cec_adap_unconfigure+0x44/0x90 [cec]\n     __cec_s_phys_addr.part.0+0x68/0x230 [cec]\n     __cec_s_phys_addr+0x40/0x50 [cec]\n     cec_unregister_adapter+0xb4/0x118 [cec]\n     adv7511_remove+0x60/0x90 [adv7511]\n     i2c_device_remove+0x34/0xe0\n     device_release_driver_internal+0x114/0x1f0\n     driver_detach+0x54/0xe0\n     bus_remove_driver+0x60/0xd8\n     driver_unregister+0x34/0x60\n     i2c_del_driver+0x2c/0x68\n     adv7511_exit+0x1c/0x67c [adv7511]\n     __arm64_sys_delete_module+0x154/0x288\n     invoke_syscall+0x48/0x100\n     el0_svc_common.constprop.0+0x48/0xe8\n     do_el0_svc+0x28/0x88\n     el0_svc+0x1c/0x50\n     el0t_64_sync_handler+0xa8/0xb0\n     el0t_64_sync+0x15c/0x160\n    Code: bad PC value\n    ---[ end trace 0000000000000000 ]---\n\nProtect against this scenario by unregistering i2c_cec after\nunregistering the CEC adapter. Duly disable the CEC clock afterwards\ntoo.",
  "Severity": "UNKNOWN",
  "Score": 0.0
}