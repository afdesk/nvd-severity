{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neth: alx: take rtnl_lock on resume\n\nZbynek reports that alx trips an rtnl assertion on resume:\n\n RTNL: assertion failed at net/core/dev.c (2891)\n RIP: 0010:netif_set_real_num_tx_queues+0x1ac/0x1c0\n Call Trace:\n  <TASK>\n  __alx_open+0x230/0x570 [alx]\n  alx_resume+0x54/0x80 [alx]\n  ? pci_legacy_resume+0x80/0x80\n  dpm_run_callback+0x4a/0x150\n  device_resume+0x8b/0x190\n  async_resume+0x19/0x30\n  async_run_entry_fn+0x30/0x130\n  process_one_work+0x1e5/0x3b0\n\nindeed the driver does not hold rtnl_lock during its internal close\nand re-open functions during suspend/resume. Note that this is not\na huge bug as the driver implements its own locking, and does not\nimplement changing the number of queues, but we need to silence\nthe splat.",
  "Severity": "UNKNOWN",
  "Score": 0.0
}