{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: add a refcnt in sctp_stream_priorities to avoid a nested loop\n\nWith this refcnt added in sctp_stream_priorities, we don't need to\ntraverse all streams to check if the prio is used by other streams\nwhen freeing one stream's prio in sctp_sched_prio_free_sid(). This\ncan avoid a nested loop (up to 65535 * 65535), which may cause a\nstuck as Ying reported:\n\n    watchdog: BUG: soft lockup - CPU#23 stuck for 26s! [ksoftirqd/23:136]\n    Call Trace:\n     <TASK>\n     sctp_sched_prio_free_sid+0xab/0x100 [sctp]\n     sctp_stream_free_ext+0x64/0xa0 [sctp]\n     sctp_stream_free+0x31/0x50 [sctp]\n     sctp_association_free+0xa5/0x200 [sctp]\n\nNote that it doesn't need to use refcount_t type for this counter,\nas its accessing is always protected under the sock lock.\n\nv1->v2:\n - add a check in sctp_sched_prio_set to avoid the possible prio_head\n   refcnt overflow.",
  "Severity": "UNKNOWN",
  "Score": 0.0
}