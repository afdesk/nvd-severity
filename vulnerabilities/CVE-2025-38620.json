{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nzloop: fix KASAN use-after-free of tag set\n\nWhen a zoned loop device, or zloop device, is removed, KASAN enabled\nkernel reports \"BUG KASAN use-after-free\" in blk_mq_free_tag_set(). The\nBUG happens because zloop_ctl_remove() calls put_disk(), which invokes\nzloop_free_disk(). The zloop_free_disk() frees the memory allocated for\nthe zlo pointer. However, after the memory is freed, zloop_ctl_remove()\ncalls blk_mq_free_tag_set(&zlo->tag_set), which accesses the freed zlo.\nHence the KASAN use-after-free.\n\n zloop_ctl_remove()\n  put_disk(zlo->disk)\n   put_device()\n    kobject_put()\n     ...\n      zloop_free_disk()\n        kvfree(zlo)\n  blk_mq_free_tag_set(&zlo->tag_set)\n\nTo avoid the BUG, move the call to blk_mq_free_tag_set(&zlo->tag_set)\nfrom zloop_ctl_remove() into zloop_free_disk(). This ensures that\nthe tag_set is freed before the call to kvfree(zlo).",
  "Severity": "UNKNOWN",
  "Score": 0.0
}