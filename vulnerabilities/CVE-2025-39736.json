{
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/kmemleak: avoid deadlock by moving pr_warn() outside kmemleak_lock\n\nWhen netpoll is enabled, calling pr_warn_once() while holding\nkmemleak_lock in mem_pool_alloc() can cause a deadlock due to lock\ninversion with the netconsole subsystem.  This occurs because\npr_warn_once() may trigger netpoll, which eventually leads to\n__alloc_skb() and back into kmemleak code, attempting to reacquire\nkmemleak_lock.\n\nThis is the path for the deadlock.\n\nmem_pool_alloc()\n  -> raw_spin_lock_irqsave(&kmemleak_lock, flags);\n      -> pr_warn_once()\n          -> netconsole subsystem\n\t     -> netpoll\n\t         -> __alloc_skb\n\t\t   -> __create_object\n\t\t     -> raw_spin_lock_irqsave(&kmemleak_lock, flags);\n\nFix this by setting a flag and issuing the pr_warn_once() after\nkmemleak_lock is released.",
  "Severity": "UNKNOWN",
  "Score": 0.0
}