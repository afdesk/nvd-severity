{
  "Description": "A stack-based buffer overflow vulnerability exists in the MFER parsing functionality of The Biosig Project libbiosig 3.9.0 and Master Branch (35a819fa). A specially crafted MFER file can lead to arbitrary code execution. An attacker can provide a malicious file to trigger this vulnerability.This vulnerability manifests on line 8970 of biosig.c on the current master branch (35a819fa), when the Tag is 63:\r\n\r\n                else if (tag==63) {\r\n                    uint8_t tag2=255, len2=255;\r\n\r\n                    count = 0;\r\n                    while ((count<len) && !(FlagInfiniteLength && len2==0 && tag2==0)){\r\n                        curPos += ifread(&tag2,1,1,hdr);\r\n                        curPos += ifread(&len2,1,1,hdr);\r\n                        if (VERBOSE_LEVEL==9)\r\n                            fprintf(stdout,\"MFER: tag=%3i chan=%2i len=%-4i tag2=%3i len2=%3i curPos=%i %li count=%4i\\n\",tag,chan,len,tag2,len2,curPos,iftell(hdr),(int)count);\r\n\r\n                        if (FlagInfiniteLength && len2==0 && tag2==0) break;\r\n\r\n                        count  += (2+len2);\r\n                        curPos += ifread(&buf,1,len2,hdr);\r\n\r\nHere, the number of bytes read is not the Data Length decoded from the current frame in the file (`len`) but rather is a new length contained in a single octet read from the same input file (`len2`). Despite this, a stack-based buffer overflow condition can still occur, as the destination buffer is still `buf`, which has a size of only 128 bytes, while `len2` can be as large as 255.",
  "Severity": "CRITICAL",
  "Score": 9.8,
  "Cvss_v31_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
}